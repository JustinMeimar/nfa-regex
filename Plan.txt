
a + b * c:

    +
   / \
  a   *
     / \
    b   c

a * b + c: 

      + 
     / \ 
    *   c
   / \
  a   b 
     

Program Execution modes:
    
    rnfa -e <regex expression> <string>     => exact mode
    rnfa -f <regex expression> <file>       => search file for occurence

Librarys
    Thread.h

Classes

NFA
    /*2 -steps 1. Create NFA 2. Run NFA*/

    // #1 Create NFA 
    NFA(
        a letter in alphabet
        | e epsilon, 
        | 0 empty-set
    )
        -- Can be constructed from one of three basic states

    // #2 Run NFA 
    Fork() 
        - at epsilon transition copy object and execute alternative path on another thread.
        - define accept and reject states 
        - return match if at least one accept state reached

Parser:
    Recursive Desscent Parser:
        -Parse input regex expression into operator tree the following operators in the following prescendence
            1.  *   kleen start operator
            2.  o   concatenation
            3.  |   union
    
    return parse tree 
    
main():
    -- read in user input in regex form 
    -- create parse tree from the input stream
    -- walk parse tree and create an NFA for each leaf node then create new NFA based on the operators